name: Deploy to Server

env:
  SERVERHOST: ''
  SERVERUSERNAME: ''
  SERVERPASSWORD: ''
  SERVERSSHPORT: ''
  SERVER_DIR: "/var/www/html/"  
  WORK_DIR: "temp"
  BUILD_COMMAND: ""
  

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment'
        required: true
        default: 'qa'
        type: choice
        options:
        - prod
        - qa
      branchname:
        description: 'Branch Name'
        required: true


jobs:
  Deploy:
    runs-on: ubuntu-latest
    steps:
    - run: |
        echo "Environment: ${{ github.event.inputs.environment }}"
        echo "Branch Name: ${{ github.event.inputs.branchname }}"
    - uses: actions/checkout@v3
      with:
        ref: ${{ github.event.inputs.branchname }}
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 14.15.1
    - name: Sets env vars for QA
      run: |
       echo "SERVERHOST=${{ secrets.SERVERHOST }}" >> $GITHUB_ENV
       echo "SERVERUSERNAME=${{ secrets.SERVERUSERNAME }}" >> $GITHUB_ENV
       echo "SERVERPASSWORD=${{ secrets.SERVERPASSWORD }}" >> $GITHUB_ENV
       echo "SERVERSSHPORT=${{ secrets.SERVERSSHPORT }}" >> $GITHUB_ENV
       echo "WORK_DIR=dtboxqa" >> $GITHUB_ENV
       echo "BUILD_COMMAND=npm run build-test" >> $GITHUB_ENV
      if: ${{ github.event.inputs.environment == 'qa' }}
    - name: Sets env vars for PROD
      run: |
       echo "SERVERHOST=${{ secrets.SERVERHOST_PROD }}" >> $GITHUB_ENV
       echo "SERVERUSERNAME=${{ secrets.SERVERUSERNAME_PROD }}" >> $GITHUB_ENV
       echo "SERVERPASSWORD=${{ secrets.SERVERPASSWORD_PROD }}" >> $GITHUB_ENV
       echo "SERVERSSHPORT=${{ secrets.SERVERSSHPORT_PROD }}" >> $GITHUB_ENV
       echo "WORK_DIR=tact" >> $GITHUB_ENV
       echo "BUILD_COMMAND=npm run build" >> $GITHUB_ENV
      if: ${{ github.event.inputs.environment == 'prod' }}    
    - name: Install dependencies
      run: npm i
    - name: Build
      run: ${{ env.BUILD_COMMAND }}   
    - name: Create Build tar
      run: |
        mkdir ${{ env.WORK_DIR }}
        #cp -TR . ${{ env.WORK_DIR }}
        cp -TR ./dist/Dento ${{ env.WORK_DIR }}
        cp .htaccess ./${{ env.WORK_DIR }}
    - name: Copy Code to Server
      uses: appleboy/scp-action@master
      with:
        host: ${{ env.SERVERHOST }}
        username: ${{ env.SERVERUSERNAME }}
        password: ${{ env.SERVERPASSWORD }}
        port: ${{ env.SERVERSSHPORT }}
        source: ${{ env.WORK_DIR }}
        rm: true
        target: "${{ env.SERVER_DIR }}${{ env.WORK_DIR }}"
    - name: Deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ env.SERVERHOST }}
        username: ${{ env.SERVERUSERNAME }}
        password: ${{ env.SERVERPASSWORD }}
        port: ${{ env.SERVERSSHPORT }}
        script: |
              cd ${{ env.SERVER_DIR }}${{ env.WORK_DIR }}
              mkdir ${{ env.SERVER_DIR }}temp
              mv -f ${{ env.WORK_DIR }} ${{ env.SERVER_DIR }}temp
              rm -r ${{ env.SERVER_DIR }}${{ env.WORK_DIR }}
              mv -f ${{ env.SERVER_DIR }}temp/${{ env.WORK_DIR }} ${{ env.SERVER_DIR }}
              rm -r ${{ env.SERVER_DIR }}temp
